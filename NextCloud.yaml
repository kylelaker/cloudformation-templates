---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Creates a NextCloud instance with S3 bucket and IAM user

Parameters:
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t3.micro
  ImageId:
    Description: EC2 Image Id
    Type: AWS::EC2::Image::Id
    Default: ami-064a0193585662d74
  AdminUser:
    Description: The name of the NextCloud administrator
    Type: String
    NoEcho: true
  AdminPass:
    Description: The password of the NextCloud administrator
    Type: String
    NoEcho: true
  NextCloudDnsName:
    Description: The FQDN of the NextCloud instance
    Type: String
  Route53HostedZone:
    Description: The Route 53 hosted zone for the FQDN
    Type: String
  LetsEncryptEmail:
    Description: The email address to use for Lets Encrypt
    Type: String
  AllowedIcmpCidrBlock:
    Description: The CIDR block from which to allow ICMP
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
  AllowedHttpCidrBlock:
    Description: The CIDR block from which to allow HTTP
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
  AllowedSshCidrBlock:
    Description: The CIDR block from which to allow SSH
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'

Resources:
  NextCloudSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NextCloud SecurityGroup
      GroupName: NextCloudSG
      SecurityGroupIngress:
        - CidrIp: !Ref AllowedIcmpCidrBlock
          Description: Allow all ICMP
          FromPort: -1
          ToPort: -1
          IpProtocol: icmp
        - CidrIp: !Ref AllowedHttpCidrBlock
          Description: Allow all HTTP
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: !Ref AllowedHttpCidrBlock
          Description: Allow all HTTPS
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
        - CidrIp: !Ref AllowedSshCidrBlock
          Description: Allow all SSH
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
  NextCloudDnsEntry:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref Route53HostedZone
      Name: !Ref NextCloudDnsName
      Type: A
      ResourceRecords:
        - !Ref NextCloudAddr
      TTL: "60"
  NextCloudAddr:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref NextCloudServer
  NextCloudServer:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      IamInstanceProfile: !Ref NextCloudInstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref NextCloudSg
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get full-upgrade -y
          apt-get install -y wget python-pip
          wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
          pip install aws-cfn-bootstrap-latest.tar.gz

          cfn-init -s ${AWS::StackName} -r NextCloudServer -c nextcloud --region ${AWS::Region}
          cfn-signal -e "$?" --stack ${AWS::StackName} -r NextCloudServer --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          nextcloud:
            - install_nextcloud
            - set_s3
            - cfn_hup
        install_nextcloud:
          commands:
            00_install_nextcloud:
              command: "snap install nextcloud"
            01_set_admin:
              command: !Sub "/snap/bin/nextcloud.manual-install ${AdminUser} ${AdminPass}"
            02_trusted_domains_enable:
              command: !Sub "/snap/bin/nextcloud.occ config:system:set trusted_domains 1 --value ${NextCloudDnsName}"
            03_set_php_limit:
              command: "snap set nextcloud php.memory-limit=512M"
            04_set_bg_job_interval:
              command: "snap set nextcloud nextcloud.cron-interval=10m"
            05_enable_https:
              command: !Sub printf 'y\n${LetsEncryptEmail}\n${NextCloudDnsName}' | /snap/bin/nextcloud.enable-https lets-encrypt
        set_s3:
          commands:
            00_enable_files_external:
              command: "/snap/bin/nextcloud.occ app:enable files_external"
            01_create_s3_storage:
              command: !Sub >-
                /snap/bin/nextcloud.occ files_external:create
                -c bucket=${NextCloudBucket}
                -c region=${AWS::Region}
                -c use_ssl=true
                -c use_path_style=true
                -c legacy_auth=false
                -c key=${NextCloudUserAccessKey}
                -c secret=${NextCloudUserAccessKey.SecretAccessKey}
                / amazons3 amazons3::accesskey
        cfn_hup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.NextCloudServer.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource NextCloudServer --configsets nextcloud --region ${AWS::Region}
                run=root
              mode: "000400"
              owner: root
              group: root
  NextCloudBucket:
    Type: AWS::S3::Bucket
  NextCloudS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref NextCloudUser
      PolicyName: NextCloudS3AccessPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:ListAllMyBuckets
            Resource: "arn:aws:s3:::*"
          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !GetAtt NextCloudBucket.Arn
              - !Sub "${NextCloudBucket.Arn}/*"
  NextCloudUser:
    Type: AWS::IAM::User
    Properties: {}
  NextCloudUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref NextCloudUser
  NextCloudIamRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Allow SSM Access
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SystemsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - cloudwatch:PutMetricData
                  - ec2:DescribeTags
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - ssm:DescribeAssociation
                  - ssm:GetDeployablePatchSnapshotForInstance
                  - ssm:GetDocument
                  - ssm:DescribeDocument
                  - ssm:GetManifest
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:ListAssociations
                  - ssm:ListInstanceAssociations
                  - ssm:PutInventory
                  - ssm:PutComplianceItems
                  - ssm:PutConfigurePackageResult
                  - ssm:UpdateAssociationStatus
                  - ssm:UpdateInstanceAssociationStatus
                  - ssm:UpdateInstanceInformation
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - ssmmessages:OpenControlChannel
                  - ssmmessages:OpenDataChannel
                  - ec2messages:AcknowledgeMessage
                  - ec2messages:DeleteMessage
                  - ec2messages:FailMessage
                  - ec2messages:GetEndpoint
                  - ec2messages:GetMessages
                  - ec2messages:SendReply
  NextCloudInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref NextCloudIamRole
